stages:
  - build-deploy

variables:
  DOCKER_IMAGE_NAME: "cotrack"
  DOCKER_IMAGE_FILE: "/tmp/${DOCKER_IMAGE_NAME}_${CI_COMMIT_TAG}.tar"

build-deploy-docker:
  stage: build-deploy
  tags:
    - ci-shell-run
    #- shell-adm02
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ls -la ~/.ssh
    - ssh-keyscan $REMOTE_SYSTEM >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$REMOTE_SYSTEM 'echo "SSH Connect - OK"'
    - docker build -t "$DOCKER_IMAGE_NAME:$CI_COMMIT_TAG" .
    - docker save "$DOCKER_IMAGE_NAME:$CI_COMMIT_TAG" -o "$DOCKER_IMAGE_NAME"_"$CI_COMMIT_TAG".tar
    - docker rmi "$DOCKER_IMAGE_NAME:$CI_COMMIT_TAG"
    - scp "$DOCKER_IMAGE_NAME"_"$CI_COMMIT_TAG".tar $SSH_USER@$REMOTE_SYSTEM:$DOCKER_IMAGE_FILE
    - | 
        ssh $SSH_USER@$REMOTE_SYSTEM "
        docker compose -f /opt/$DOCKER_IMAGE_NAME/docker-compose.yml down || true &&
        docker container rm -f $DOCKER_IMAGE_NAME || true &&
        docker rmi \$(docker images $DOCKER_IMAGE_NAME -a -q) || true
        "
    - sed -i -e "s/<VERSION>/$CI_COMMIT_TAG/g" docker-compose.yml
    - scp docker-compose.yml $SSH_USER@$REMOTE_SYSTEM:/opt/$DOCKER_IMAGE_NAME
    - |
        ssh $SSH_USER@$REMOTE_SYSTEM "
        docker load -i $DOCKER_IMAGE_FILE &&
        rm $DOCKER_IMAGE_FILE &&
        docker compose -f /opt/$DOCKER_IMAGE_NAME/docker-compose.yml up -d
        "
  when: manual
  rules:
    - if: $CI_COMMIT_TAG

